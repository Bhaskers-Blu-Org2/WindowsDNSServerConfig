#---------------------------------#
#      environment configuration  #
#---------------------------------#
version: 1.0.{build}.0
environment:
  AppID:
    secure: IJBqnB6WjtDi3ej/zy2D70Ry1AvJOrlZK5BhSoqEdxNENd0CL9qdMJndbi6p+di3
  AppPass:
    secure: b8lT719n/ll0Bp5SloBvzw==
  Tenant:
    secure: J/my7xsOE9jewR0DDhD+EU5jeo5Bp83/nmIK8a8QI0QLoZXStCOtk1vUjVsKylW2
install:
  - git clone https://github.com/Microsoft/WindowsDNSServer.Config
  - ps: |
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.205 -Force | Out-Null
        Install-Module -Name Pester -Repository PSGallery -Force
        Install-Module -Name AzureRM -Repository PSGallery -Force

#---------------------------------#
#      build configuration        #
#---------------------------------#

build: false

#---------------------------------#
#      test configuration         #
#---------------------------------#

test_script:
    - ps: |
        $testResultsFile = ".\TestsResults.xml"
        $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResultsFile -PassThru
        (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $testResultsFile))
        if ($res.FailedCount -gt 0) {
            throw "$($res.FailedCount) tests failed."
        }

#---------------------------------# 
#      deployment configuration   # 
#---------------------------------# 

# scripts to run before deployment 
deploy_script: 
  - ps: |
        $loc = 'eastus2'
        $creds = New-Object -typename System.Management.Automation.PSCredential -argumentlist $env:AppID, $(convertto-securestring -String $env:AppPass -AsPlainText -Force)
        Add-AzureRmAccount -Credential $creds -ServicePrincipal -TenantId $env:Tenant | Out-Null
        New-AzureRmResourceGroup -Name $env:APPVEYOR_PROJECT_NAME -Location $loc
        New-AzureRMAutomationAccount -ResourceGroupName $env:APPVEYOR_PROJECT_NAME -Name $env:APPVEYOR_PROJECT_ID -Location $loc
        $Modules = @(
            @{
              Name = 'xDNSServer'
              URI = 'https://github.com/PowerShell/xDnsServer/archive/1.7.0.0-PSGallery.zip'
              }
          )
        Foreach($module in $modules) {
          New-AzureRMAutomationModule -ResourceGroupName $env:APPVEYOR_PROJECT_NAME -AutomationAccountName $env:APPVEYOR_PROJECT_ID -Name $Module.Name -ContentLink $Module.URI
        }
        Remove-AzureRmResourceGroup -Name $env:APPVEYOR_PROJECT_NAME -Force
